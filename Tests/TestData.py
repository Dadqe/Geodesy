import json


# Из ведомости вычисления координат, видимо 4 курс, курсач с Таней. со второго листа 313-1-2-3-4-5-314
[(23, 49, 18), (238, 29, 18), (204, 27, 3), (67, 59, 56), (180, 31, 51), (82, 14, 38), (102, 27, 54)]

# Из ведомости вычисления координат по практике за первый курс 12 углов О_о
s2 = [(107, 17, 30, 33.55), (182, 59, 30, 42.35), (205, 0, 0, 41.95), (109, 25, 0, 59.4), (119, 9, 30, 56.8), (172, 43, 0, 66.61), (193, 4, 30, 90.6), (150, 6, 0, 50.81), (214, 47, 30, 78), (109, 39, 30, 52.93), (128, 25, 30, 52.40), (208, 3, 0, 49.38), (119, 16, 30, 46.32), (139, 59, 30, 294.69)]
# В последней точке тип тоже есть информация о том, какое расстояние между последним ПП (Пунктом полигонометрии) и первым ПП, но он в расчёт суммы растояний, почему-то не берётся

sum_d_s2 = round(sum([t[3] for t in s2[:-1]]), 2)
aa = s2[:]
ss = [{"Deg": a[0], "Min": a[1], "Sec": a[2], "HorDist": a[3]} for a in aa]
# print(ss)
with open("DataInput.json", "w", encoding="utf-8") as f:
    out = json.dumps(ss, ensure_ascii=False, indent=4)    # dumps из питоновских типов всех делает строку, сохраняя скобки и потом можно записать в ДЖСОН и всё будет в нормальном виде. Главное не забыть параметры ensure_ascii=False, indent=4
# с f.read можно и в одну строку запиасть, но так удобнее
    f.write(out)



[
  {
    "Deg": "0",
    "Min": "0",
    "Sec": "0",
    "HorDist": "0"
  },
  {
    "Deg": "0",
    "Min": "0",
    "Sec": "0",
    "HorDist": "0"
  }
]
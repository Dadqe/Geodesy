from pydantic import BaseModel
from typing import List     # можно попробовать уже в 3.10 на тайпингах внутри Питона


# class Point(BaseModel):
#     Name: str = 0
#     Deg: int = 0
#     Min: int = 0
#     Sec: int = 0
#     CorDeg: int = 0         # На счёт дефолтных значений здесь не уверен...
#     CorMin: int = 0
#     CorSec: int = 0
#     HorDist: float | int    # Надо как-то, что б туда можно было хоть что передавать, хоть инт, хоть флоат. Если там просто инт передадут, то привести к флоат, что-нибудь типа такого. Как-то обработку эту надо запилить...


# Надо как-то придумать, что б нам не обязательно надо было передавать пост запрос с ноликами у исправленных... Либо сначала мы передаём только вычисленные углы и расстояние, а возвращаем уже новый ДЖСОН с исправленными углами... Но эти исправленные углы в полученный ДЖСОН закидывать или отдельно передать просто?


class Point(BaseModel):
    Name: str = ''
    Deg: int = 0
    Min: int = 0
    Sec: int = 0
    HorDist: float | int    # Надо как-то, что б туда можно было хоть что передавать, хоть инт, хоть флоат. Если там просто инт передадут, то привести к флоат, что-нибудь типа такого. Как-то обработку эту надо запилить...
    
    
#class Point(BaseModel):
#    Name: PointInfo
# Хотел, что б была моделька вида:
# {
#     <pointname> : {
#         "Deg": 150,
#         "Min": 25,
#         "Sec": 35,
#         "HorDist": 150
#     },
#     <pointname> : {
#         "Deg": 150,
#         "Min": 25,
#         "Sec": 35,
#         "HorDist": 150
#     }
# }



# Можно сделать что-то типа как в уроке 3 8 минута
class Points(BaseModel):
    "points": List[Point]

# Для передачи данных в post-запрос
{
    "points": [
        {
            Deg: int = 0
            Min: int = 0
            Sec: int = 0
        },
        {
            Deg: int = 0
            Min: int = 0
            Sec: int = 0
        }
    ]
}
# Но возможность добавлять имя точки желательно бы сделать, что б для отчёта было, например. Ну или репера обозначать, они то имеют какое-то имя в реальности


# 6 урок 3 минута
class TryPoint(BaseModel):
    

